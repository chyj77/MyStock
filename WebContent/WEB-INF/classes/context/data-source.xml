<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

	<context:property-placeholder location="classpath:conf/conf.properties" />
	
	
	<!-- 普通数据源 -->
	<bean id="dataSource" class="com.cyj.mystock.MyDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接池启动时的初始值 -->  
        <property name="initialSize" value="10" />  
        <!-- 连接池的最大值 
        <property name="maxActive" value="10" />  -->  
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->  
        <property name="maxIdle" value="20" />  
        <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->  
        <property name="minIdle" value="10" />  
        <!--<property name="defaultAutoCommit" value="true" />  -->
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--<bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate"> 
		<constructor-arg ref="dataSource"/> </bean> -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.flushmode">auto</prop>
				<prop key="hibernate.transaction.coordinator_class">jdbc</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
                <!-- 可以加多个包 -->
                <value>com.cyj.mystock.entity.Cdcp2r</value>
                <value>com.cyj.mystock.entity.Cdcp2rVo</value>
                <value>com.cyj.mystock.entity.Ztsj</value>
                <value>com.cyj.mystock.entity.Spcz</value>
                <value>com.cyj.mystock.entity.GfStock</value>
                <value>com.cyj.mystock.entity.ZtsjAnay</value>
            </list>
		</property>
	</bean>
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	 <context:annotation-config />  
    
    <!-- 支持  @Transactional 标记 -->  
    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
    <!-- 定义事务管理器 -->    
    <bean id="transactionManager"  
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>  
    
    <aop:config proxy-target-class="true">
        
        <aop:pointcut expression=" execution(* com.cyj.mystock.service..*(..))"
            id="serviceMethod" />
        
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
    </aop:config>
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        
        <tx:attributes>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    
	<bean id="mystockContextAware" class="com.cyj.mystock.MystockContextAware" />
	<!-- 数据库操作dataBaseDao -->
	<bean id="dataBaseDao" class="com.cyj.mystock.dao.DataBaseDao">
		<constructor-arg index="0" ref="dataSource" />
		<constructor-arg index="1" ref="jdbcTemplate" />
	</bean>
	<!-- 使用注解的包路径 -->  
   
	<context:component-scan base-package="com.cyj.mystock.service" />
	<context:component-scan base-package="com.cyj.mystock.dao" />
</beans>
